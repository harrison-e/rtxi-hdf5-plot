#!/usr/bin/python3

import h5py
import argparse
import numpy as np
import matplotlib.pyplot as plt

parser = argparse.ArgumentParser(description='Parsing HDF5')
parser.add_argument('filename')
args = parser.parse_args()

try:
    f = h5py.File(args.filename, 'r')
except:
    print(f'Something went wrong opening \'{args.filename}\'')
else:
    num_trials = len(f.keys())
    cols = 3 
    rows = (num_trials + cols - 1) // cols

    colors = ['#0000DD', '#CC0000', '#00CC33', '#CC6600', 
              '#400080', '#CCCC00', '#000099', '#000000']
    fig, axs = plt.subplots(rows, cols, figsize=(15, rows * 4))
    axs = axs.flatten()

    # def plot_datasets(name, object):
    #     time, value = 
    #     return time, value 
    
    # Plot data from all trials
    for trial in f.keys():
        trial_num = trial[5:]
        idx = int(trial_num) - 1

        # Plot trial if it has synchronous data, else remove
        if f[trial]['Synchronous Data']:
            axs[idx].set_title(f'Trial {trial_num}')
            color = 0
            for key in f[trial]['Synchronous Data']:
                dset = f[trial]['Synchronous Data'][key]
                time, value = zip(*dset.fields(['time', 'value'])[:])
                axs[idx].plot(time[1:], value[1:], color=(colors[color]))
                color = (color + 1) % len(colors)
        else:
            axs[idx].axis('off')

    # Remove unused plots 
    for i in range(num_trials, len(axs)):
        axs[i].axis('off')

    plt.tight_layout()
    plt.show()
